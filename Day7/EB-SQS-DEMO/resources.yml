# Create EventBridge Event bus
EventBus:
  Type: AWS::Events::EventBus
  Properties:
    Name: QR_EVENT_BUS_${self:provider.stage}

TargetSQS:
  Type: AWS::SQS::Queue
  Properties:
    QueueName: QR_MESSAGE_QUEUE_${self:provider.stage}
    # Retry to DLQ
    RedrivePolicy:
      deadLetterTargetArn: !GetAtt TargetDLQ.Arn
      maxReceiveCount: 1    

# Dead Letter Queue
TargetDLQ:
  Type: AWS::SQS::Queue
  Properties:
    QueueName: QR_MESSAGE_DLQ

TargetSQSRule:
  Type: AWS::Events::Rule
  Properties:
    EventBusName: !GetAtt EventBus.Arn
    EventPattern:
      source:
        - "fuel-app"
      detail-type:
        - "user-signup"
    Targets:
      - Arn: !GetAtt TargetSQS.Arn
        Id: qr-event-bus-${self:provider.stage}

# principal - Event bridge to write to SQS

TargetSQSPolicy:
  Type: AWS::SQS::QueuePolicy
  Properties:
    Queues:
      - !Ref TargetSQS
    PolicyDocument:
      Statement:
        - Effect: "Allow"
          Action:
            - "SQS:SendMessage"
          Resource: !GetAtt TargetSQS.Arn
          Principal: 
            Service: events.amazonaws.com            